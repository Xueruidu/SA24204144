% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SA24204144.R
\name{SVR_test}
\alias{SVR_test}
\title{SVR Test for Network Correlation}
\usage{
SVR_test(matrix)
}
\arguments{
\item{matrix}{A symmetric weighted adjacency matrix representing the network. 
The matrix elements should be numeric values where each element 
represents the strength of the correlation between two nodes in the network.
The matrix must be square and symmetric (i.e., the correlation between node i and j 
is the same as between node j and i).}
}
\value{
A list containing:
        - `break_points`: A named vector with the breakpoints for positive and negative correlations.
        - `simple_matrix`: A transformed matrix with values set to 1, 0, or -1 based on thresholds.
        - `SVR_test_result`: A list with the following elements:
            - `statistic`: The calculated SVR test statistic.
            - `p_value`: The p-value for the chi-square test.
            - `df`: The degrees of freedom for the chi-square test.
}
\description{
This function performs an SVR (Squared Variance Ratio) test to analyze
             the breakpoints of positive and negative correlations in a network's
             weighted adjacency matrix. The test computes the SVR value and p-value
             based on a chi-square distribution, which allows us to test the null 
             hypothesis that the m1 smallest positive and m2 largest negative 
             correlations are zero.

             The SVR test helps to identify significant positive and negative 
             correlations in the network by breaking them into smaller and larger 
             segments and calculating the squared variance ratio for each segment.
             The breakpoints, along with the SVR statistic and p-value, are returned
             to provide insights into the strength and significance of the correlations.
}
\examples{
\dontrun{
    # Generate a random 10x10 correlation matrix
    set.seed(123) # For reproducibility
    random_data <- matrix(rnorm(100), nrow = 10) # Random data with 10 variables
    corr_matrix <- cor(random_data) # Compute correlation matrix
    
    # Ensure the diagonal elements are 0 for a graph adjacency matrix
    adj_matrix <- corr_matrix
    print(SVR_test(adj_matrix))
}
}
